/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package server.view;

/**
 * A simple dialog used to show small messages
 *
 * @version 4/7/2022
 * @author C11836 Jostin Castro Gutierrez, C12916 Fernando Flores Moya, C15079
 * Joshua Mora Garita
 */
public class AdminMessageDialog extends javax.swing.JDialog {

    /**
     * Creates new form MessageDialog.
     *
     * @param parent the parent of the dialog.
     * @param modal specifies whether dialog blocks user input to other
     * top-level windows when shown. If {@code true}, the modality type property
     * is set to {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog is
     * modeless.
     * @param message the message to show.
     * @param title the title of the dialog.
     */
    public AdminMessageDialog(java.awt.Frame parent, boolean modal, String message, String title) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        lbMessage.setText(message);
        this.setTitle(title);
        this.setVisible(true);
    }

    /**
     * Creates a new message dialog.
     *
     * @param message the message to show.
     * @param title the title of the dialog.
     */
    public AdminMessageDialog(String message, String title) {
        this(null, false, message, title);
    }

    /**
     * Shows the message dialog with a message and a tittle.
     *
     * @param message the message to show.
     * @param title the title of the dialog.
     */
    public static void showMessageDialog(String message, String title) {
        new AdminMessageDialog(message, title);
    }

    /**
     * Show the message dialog with a message, title, and a option to lock the
     * background threads.
     *
     * @param modal <b>true</b> if you want to lock the background threads,
     * <b>false</b> otherwise.
     * @param message the message to show.
     * @param title the title of the dialog.
     */
    public static void showMessageDialog(boolean modal, String message, String title) {
        new AdminMessageDialog(null, modal, message, title);
    }

    /**
     * Show the message dialog with a message, title, and a option to lock the
     * background threads and his parent.
     *
     * @param parent the frame parent of this dialog.
     * @param modal <b>true</b> if you want to lock the background threads,
     * <b>false</b> otherwise.
     * @param message the message to show.
     * @param title the title of the dialog.
     */
    public static void showMessageDialog(java.awt.Frame parent, boolean modal, String message, String title) {
        new AdminMessageDialog(parent, modal, message, title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        lbMessage.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lbMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        lbMessage.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbMessage;
    // End of variables declaration//GEN-END:variables
}
