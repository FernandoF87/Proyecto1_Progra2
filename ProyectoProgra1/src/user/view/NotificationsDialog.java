/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package user.view;

import java.awt.Cursor;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import server.model.Notification;
import user.model.NotificationTableModel;

/**
 *
 * @author Jostin Castro
 */
public class NotificationsDialog extends javax.swing.JDialog {

    /**
     * Creates new form NotificationsDialog
     */
    public NotificationsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbNotifications = new javax.swing.JTable();
        btClose = new javax.swing.JButton();

        setTitle("Notificaciones");

        tbNotifications.setModel(new NotificationTableModel());
        tbNotifications.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNotificationsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbNotifications);

        btClose.setText("Cerrar");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        ((MainFrame) getParent()).resetComponents();
    }//GEN-LAST:event_btCloseActionPerformed

    private void tbNotificationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNotificationsMouseClicked
        // TODO add your handling code here:
        NotificationTableModel model = (NotificationTableModel) tbNotifications.getModel();
        Notification temp = model.getSelectedNotification(tbNotifications.getSelectedRow());
        NotificationDetails details = new NotificationDetails(null, false, temp);
        details.setVisible(true);
    }//GEN-LAST:event_tbNotificationsMouseClicked

    public void loadNotifications(LinkedList<Notification> notifications) {
        NotificationTableModel model = (NotificationTableModel) tbNotifications.getModel();
        if (notifications.size() > 0) {
            if (notifications.get(0).getType() == -1) {
                notifications.poll();
                model.setRowCount(notifications.size());
            }
            for (int i = 0; i < notifications.size(); i++) {
                model.setValueAt(notifications.get(i), i, 0);
            }
        } else {
            Notification temp = new Notification(null, "No tiene notificaciones", true);
            model.setRowCount(1);
            model.setValueAt(temp.getMessage(), 0, 0);
            temp.setType((byte) -1);
            notifications.add(temp);
            
        }
        model.setNotifications(notifications);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbNotifications;
    // End of variables declaration//GEN-END:variables
}
